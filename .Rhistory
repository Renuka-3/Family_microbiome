v
Z <- 1 - as.matrix(vegdist(v))
View(Z)
po = phyloseq::distance(rp, "bray")
po.m = melt(as.matrix(po))
po.m = po.m %>%
filter(as.character(Var1) != as.character(Var2)) %>%
mutate_if(is.factor, as.character)
sd = data.frame(sample_data(phy))
sd
sd = data.frame(sample_data(ps1))
sd
sd = data.frame(sample_data(rp))
sd
sd = sd %>%
select("Sample", "Family") %>%
mutate_if(is.factor,as.character)
colnames(sd) = c("Var1", "Fam1")
wu.sd = left_join(wu.m, sd, by = "Var1")
po.sd = left_join(po.m, sd, by = "Var1")
colnames(sd) = c("Var2", "Fam2")
wu.sd = left_joinwu.sd, sd, by = "Var2")
po.sd = left_joinwu.sd, sd, by = "Var2")
po.sd = left_joinpo.sd, sd, by = "Var2")
p = ggplotpo.sd, aes(x = Fam1, y = value)) +
p = ggplot(po.sd, aes(x = Fam1, y = value)) +
theme_bw() +
geom_point() +
geom_boxplot(aes(color = ifelse(Fam1 == Fam2, "red", "black" ))) +
theme(axis.text.x=element_text(angle = 90, hjust = 1, vjust = 0.5)) +
ggtitle(paste0("Distance Metric = ", "bray")) +
ylab("bray") +
xlab("Family")
print(p)
po.sd = left_join(po.sd, sd, by = "Var2")
p = ggplot(po.sd, aes(x = Fam1, y = value)) +
theme_bw() +
geom_point() +
geom_boxplot(aes(color = ifelse(Fam1 == Fam2, "red", "black" ))) +
theme(axis.text.x=element_text(angle = 90, hjust = 1, vjust = 0.5)) +
ggtitle(paste0("Distance Metric = ", "bray")) +
ylab("bray") +
xlab("Family")
print(p)
p = ggplot(po.sd, aes(x = Fam1, y = value)) +
theme_bw() +
geom_point() +
geom_boxplot() + +
ylab("bray") +
xlab("Family")
p = ggplot(po.sd, aes(x = Fam1, y = value)) +
theme_bw() +
geom_point() +
geom_boxplot() +
ylab("bray") +
xlab("Family")
print(p)
View(sd)
Z
df <- meta(rp)
df <- bind_cols(df, Z)
df
dim(Z)
pv <- wilcox.test(data = df, index ~ factor(family()))$p.value
pv <- wilcox.test(data = df, index ~ factor(Family()))$p.value
df <- meta(rp)
df
dim(df)
df <- bind_cols(df, Z)
dim(df)
df
pv <- wilcox.test(data = df, Z ~ factor(Family()))$p.value
df
names(df)
df$bc <- df[[Z]]
pv <- wilcox.test(data = df, ~ factor(Family()))$p.value
set.seed(4554)
sample.names <- sample_names(ps)
selected.samples <- sample.names[grepl("[1|3]$", sample.names)]
ps1 <- phyloseq::prune_samples(selected.samples, ps)
rp <- microbiome::transform(ps1, "compositional")
v <- distance(rp, method= "bray")
Z <- 1 - as.matrix(vegdist(v))
po = phyloseq::distance(rp, "bray")
po.m = melt(as.matrix(po))
po.m = po.m %>%
filter(as.character(Var1) != as.character(Var2)) %>%
mutate_if(is.factor, as.character)
sd = data.frame(sample_data(rp))
sd = sd %>%
select("Sample", "Family") %>%
mutate_if(is.factor,as.character)
colnames(sd) = c("Var1", "Fam1")
po.sd = left_join(po.m, sd, by = "Var1")
colnames(sd) = c("Var2", "Fam2")
po.sd = left_join(po.sd, sd, by = "Var2")
p = ggplot(po.sd, aes(x = Fam1, y = value)) +
theme_bw() +
geom_point() +
geom_boxplot() +
ylab("bray") +
xlab("Family")
p
Z
v
View(v)
v <- distance(rp, method= "bray")
v$
set.seed(4554)
sample.names <- sample_names(ps)
selected.samples <- sample.names[grepl("[1|3]$", sample.names)]
ps1 <- phyloseq::prune_samples(selected.samples, ps)
rp <- microbiome::transform(ps1, "compositional")
v <- distance(rp, method= "bray")
Z <- 1 - as.matrix(vegdist(v))
ZB <- as.data.frame.table(as.matrix(Z))|>
transform(Var1 = as.character(Var1), Var2 = as.character(Var2)) |>
subset(Var1<Var2)
Z
ddf <- as.data.frame(as.matrix(v))
ZB <- as.data.frame.table(as.matrix(ddf))|>
transform(Var1 = as.character(Var1), Var2 = as.character(Var2)) |>
subset(Var1<Var2)
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
set.seed(4554)
sample.names <- sample_names(ps)
selected.samples <- sample.names[grepl("[1|3]$", sample.names)]
ps1 <- phyloseq::prune_samples(selected.samples, ps)
rp <- microbiome::transform(ps1, "compositional")
v <- distance(rp, method= "bray")
Z <- 1 - as.matrix(vegdist(v))
gg <- meandist(Z)
set.seed(4554)
sample.names <- sample_names(ps)
selected.samples <- sample.names[grepl("[1|3]$", sample.names)]
ps1 <- phyloseq::prune_samples(selected.samples, ps)
ps1 <- phyloseq::prune_samples(selected.samples, ps)
rp <- microbiome::transform(ps1, "compositional")
rp <- microbiome::transform(ps1, "compositional")
v <- distance(rp, method= "bray")
Z <- 1 - as.matrix(vegdist(v))
Z
v
BC <- as.matrix(vegdist(rp, method = "bray"))
v <- vegan::vegdist(ps1, method= "bray")
v <- vegan::vegdist(rp, method= "bray")
rp.m <-  melt(as.matrix(rp))
ddf <- as.data.frame(as.matrix(v))
rp.m <-  melt(rp)
v <- vegan::vegdist(t(otu_table(phy)), method= "bray")
v
v <- vegan::vegdist(t(otu_table(ps1)), method= "bray")
v
v <- vegan::vegdist(t(otu_table(rp)), method= "bray")
v
zdf <- as.data.frame(as.matrix(v))
zdf
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
set.seed(4554)
sample.names <- sample_names(ps)
selected.samples <- sample.names[grepl("[1|3]$", sample.names)]
ps1 <- phyloseq::prune_samples(selected.samples, ps)
rp <- microbiome::transform(ps1, "compositional")
v <- distance(rp, method= "bray")
set.seed(4554)
sample.names <- sample_names(ps)
selected.samples <- sample.names[grepl("[1|3]$", sample.names)]
ps1 <- phyloseq::prune_samples(selected.samples, ps)
rp <- microbiome::transform(ps1, "compositional")
v <- vegan::vegdist(t(otu_table(rp)), method= "bray")
v
po.m = melt(as.matrix(v))
po.m = po.m %>%
filter(as.character(Var1) != as.character(Var2)) %>%
mutate_if(is.factor, as.character)
sd = data.frame(sample_data(rp))
sd = sd %>%
select("Sample", "Family") %>%
mutate_if(is.factor,as.character)
colnames(sd) = c("Var1", "Fam1")
po.sd = left_join(po.m, sd, by = "Var1")
colnames(sd) = c("Var2", "Fam2")
po.sd = left_join(po.sd, sd, by = "Var2")
p = ggplot(po.sd, aes(x = Fam1, y = value)) +
theme_bw() +
geom_point() +
geom_boxplot() +
ylab("bray") +
xlab("Family")
p
pair.plot(v, what = 1, col = c("orange", "blue"), legend = TRUE, diag = 1)
plot(v, y=NULL, labels=colnames(means(x)),showPMA=TRUE,type="scatter",...)
plot(v, y=NULL, labels=colnames(means(x)),showPMA=TRUE,type="scatter")
plot(v, y=NULL, labels=colnames(means(v)),showPMA=TRUE,type="scatter")
set.seed(4554)
ps <- phy
set.seed(4554)
sample.names <- sample_names(ps)
selected.samples <- sample.names[grepl("[2|3]$", sample.names)]
ps1 <- phyloseq::prune_samples(selected.samples, ps)
rp <- microbiome::transform(ps1, "compositional")
v <- vegan::vegdist(t(otu_table(rp)), method= "bray")
v
ps1
s1 <- subset_samples(phy, Sample == c("A2", "A5"))
subset_samples(ps, Sample %in% paste0(LETTERS, c(A1, A3)))
subset_samples(ps, Sample %in% paste0(A, c(1, 3)))
selected.samples <- sample.names[grepl("[A2|A3]$", sample.names)]
ps1 <- phyloseq::prune_samples(selected.samples, ps)
ps1
selected.samples
selected.samples <- sample.names[grepl("[A2|A3]$", sample.names)]
selected.samples
subset_samples(ps, Sample %in% paste0(c(A1, A3)))
subset_samples(ps, Sample %in% paste0(c(A2, A3)))
subset_samples(ps, Sample %in% A(c(2, 3)))
subset_samples(ps, Sample %in% A( LETTERS, c(2, 3)))
ps
sample_data(ps)
fam1<- subset_samples(ps,sample="A2", "A3")
fam1<- subset_samples(ps, sample="A2", "A3")
fam1<- subset_samples(ps, sample= c("A2", "A3"))
fam1
fam2 <- prune_samples(sample_names(ps) == "A2", ps)
fam2
fam2 <- prune_samples(sample_names(ps) == "A2, A3", ps)
fam2 <- prune_samples(sample_names(ps) == "A2", "A3", ps)
fam3 <- prune_samples(sample_names(ps) == "A", ps)
fam3 <- prune_samples(sample_names(ps) == "A3", ps)
fam3
sample_data(fam3)
famA <- merge_phyloseq(fam1, fam2)
famA
famA <- merge_phyloseq(fam2, fam3)
famA
sample_data(fam3)
sample_data(famA)
sample_data(ps)
v <- vegan::vegdist(t(otu_table(famA)), method= "bray")
v
famA.m = melt(as.matrix(v))
famA.m = famA.m %>%
filter(as.character(Var1) != as.character(Var2)) %>%
mutate_if(is.factor, as.character)
sd = data.frame(sample_data(famA))
sd = sd %>%
select("Sample", "Family") %>%
mutate_if(is.factor,as.character)
colnames(sd) = c("Var1", "Fam1")
po.sd = left_join(po.m, sd, by = "Var1")
colnames(sd) = c("Var2", "Fam2")
po.sd = left_join(po.sd, sd, by = "Var2")
po.sd
famA.m = melt(as.matrix(v))
famA.m
p = ggplot(famA.m, aes(x = Var1, y = value)) +
geom_point() + geom_boxplot()
p
p = ggplot(famA.m, aes(x = Var1, y = value)) + geom_boxplot()
p
p = ggplot(famA.m, aes(x = Var1, y = Var2)) + geom_boxplot()
p
p = ggplot(v, aes(x = Var1, y = value)) + geom_boxplot()
fam2 <- prune_samples(sample_names(ps) == "A2", ps)
fam3 <- prune_samples(sample_names(ps) == "A3", ps)
famA <- merge_phyloseq(fam2, fam3)
v <- vegan::vegdist(t(otu_table(famA)), method= "bray")
famA.m = melt(as.matrix(v))
p = ggplot(famA.m, aes(x = Var1, y = value)) + geom_boxplot()
p
phyloseq::psmelt(v) %>%
ggplot(data = v, aes(x = A1, y = B1)) + geom_boxplot()
phyloseq::psmelt(v) %>% ggplot(data = v, aes(x = A1, y = B1)) + geom_boxplot()
fam2 <- prune_samples(sample_names(ps) == "A2", ps)
fam3 <- prune_samples(sample_names(ps) == "A3", ps)
famA <- merge_phyloseq(fam2, fam3)
v <- vegan::vegdist(t(otu_table(famA)), method= "bray")
famA.m = melt(as.matrix(v))
p = ggplot(famA.m, aes(x = Var1, y = value)) + geom_boxplot()
p
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
rm(famA)
ps <- phy
famA <- prune_samples(c("A2", "A3"), ps)
famA
sample_data(famA)
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
v
v <- vegan::vegdist(t(otu_table(famA)[, "A2"]), t(otu_table(famA)[, "A3"]), method= "bray")
v
v
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
v
famA <- merge_phyloseq(fam2, fam3)
v <- vegan::vegdist(t(otu_table(famA)), method= "bray")
v
famA <- prune_samples(c("A2", "A3"), ps)
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
v
library(vegan)
famA <- prune_samples(c("A2", "A3"), ps)
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
v
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
print(v)
v <- vegan::vegdist(otu_table(famA)["A2",], otu_table(famA)[, "A3"], method= "bray")
v <- vegan::vegdist(otu_table(famA)["A2" ,], otu_table(famA)[, "A3"], method= "bray")
v <- vegan::vegdist(otu_table(famA)["A2", ], otu_table(famA)[, "A3"], method= "bray")
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
library(vegan)
famA <- prune_samples(c("A2", "A3"), ps)
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
v
famA <- prune_samples(c("A1", "A3"), ps)
# Calculate Bray-Curtis between abundance vectors for samples A2 and A3
ml <- vegan::vegdist(otu_table(famA)[, "A1"], otu_table(famA)[, "A3"], method= "bray")
v <- vegan::vegdist(otu_table(famA)[, "A1"], otu_table(famA)[, "A3"], method= "bray")
v
fam2 <- prune_samples(sample_names(ps) == "A2", ps)
fam3 <- prune_samples(sample_names(ps) == "A3", ps)
famA <- merge_phyloseq(fam2, fam3)
v <- vegan::vegdist(t(otu_table(famA)), method= "bray")
v
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
famA <- prune_samples(c("A1", "A3"), ps)
v <- vegan::vegdist(otu_table(famA)[, "A1"], otu_table(famA)[, "A3"], method= "bray")
otu_table(famA)[, "A2"]
famA <- prune_samples(c("A2", "A3"), ps)
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
otu_table(famA)[, "A2"]
famA <- prune_samples(c("A2", "A3"), ps)
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
v
(otu_table(famA)[, "A2"])
famA <- prune_samples(c("A2", "A3"), ps)
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
otu_table(famA)[, "A2"]
print(otu_table(famA)[, "A2"])
print(otu_table(famA)[, "A3"])
p = ggplot(v, aes(x = otu_table(famA)[, "A2"], y = otu_table(famA)[, "A3"])) + geom_boxplot()
print(otu_table(famA)[, "A3"])
p = ggplot(v, aes(x = "A2", y = "A3") + geom_boxplot()
print(p)
p = ggplot(v, aes(x = "A2", y = "A3") + geom_boxplot()
print(p)
p = ggplot(v, aes(x = "A2", y = "A3") + geom_boxplot()
print(p)
p = ggplot(v, aes(x = "A2", y = "A3") + geom_boxplot()
Print(p)
p = ggplot(v, aes(x = "A2", y = "A3")) + geom_boxplot()
as.vector(otu_table(famA)[, "A2"])
dim(famA)
famA
dim(famA)
dim(ps)
library(microbiome)
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
library(vegan)
famA <- prune_samples(c("A2", "A3"), ps)
# Calculate Bray-Curtis between abundance vectors for samples A2 and A3
v <- vegan::vegdist(otu_table(famA)[, "A2"], otu_table(famA)[, "A3"], method= "bray")
print(otu_table(famA)[, "A3"])
as.vector(otu_table(famA)[, "A2"])
dim(otu_table(famA)[, "A2"])
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
theme_set(theme_bw(30))
p1 <- plot_landscape(microbiome::transform(phy, "compositional"),
distance = distance,
method = method,
size = 5,
col = "Diet",
shading = FALSE)+
scale_colour_brewer(palette = "Set1")	+ labs(title = "Diet") + theme(legend.position = 'bottom', legend.text=element_text(size=20), legend.title=element_text(size=25))
p2 <- plot_landscape(microbiome::transform(phy, "compositional"),
distance = distance,
method = method,
size = 5,
col = "Age",
shading = FALSE)+
scale_colour_brewer(palette = "Set1")	+ labs(title = "Age") + theme(legend.position = 'bottom', legend.text=element_text(size=20), legend.title=element_text(size=25))
p3 <- plot_landscape(microbiome::transform(phy, "compositional"),
distance = distance,
method = method,
size = 5,
col = "Gender",
shading = FALSE)+
scale_colour_brewer(palette = "Set1")	+ labs(title = "Gender") + theme(legend.position = 'bottom', legend.text=element_text(size=20), legend.title=element_text(size=25))
p4 <- plot_landscape(microbiome::transform(phy, "compositional"),
distance = distance,
method = method,
size = 5,
col = "Location",
shading = FALSE)+
scale_colour_brewer(palette = "Set1")	+ labs(title = "Location") + theme(legend.position = 'bottom', legend.text=element_text(size=20), legend.title=element_text(size=25))
p5 <- plot_landscape(microbiome::transform(phy, "compositional"),
distance = distance,
method = method,
size = 5,
col = "Family",
shading = FALSE)+
scale_colour_brewer(palette = "Set1")	+ labs(title = "Family") + theme(legend.position = 'bottom', legend.text=element_text(size=20), legend.title=element_text(size=25))
gridExtra::grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
rmarkdown::render("Betadiversity.Rmd", output_format = md_document)
rmarkdown::render("Betadiversity.Rmd", output_format = "md_document")
