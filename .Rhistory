scale_y_continuous(label = scales::percent) +
##scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance") + theme_bw() + theme(text = element_text(size = 20), axis.text = element_text(size = 15), axis.title = element_text(size = 15))
print(p4)
##figure 2
fam_tse <- readRDS("inputdata/processed/TSE/fam_tse.rds")
tse <- relAbundanceCounts(fam_tse)
tse <- transformCounts(tse, method = "relabundance")
#tse <- transformSamples(tse, method="relabundance")
altExp(tse,"Genus") <- agglomerateByRank(tse, "Genus")
head(getPrevalence(tse, detection = 0.1, sort = TRUE, assay_name = "relabundance",
as_relative = FALSE))
altExp(tse, "prevalent_genera") <- subsetByPrevalentTaxa(tse,
rank = "Genus",
assay_name= "relabundance",
detection = 0.1/100,
prevalence = 20/100,
as_relative = TRUE)
molten_tse2 <- meltAssay(altExp(tse, "prevalent_genera"),
add_row_data = TRUE,
add_col_data = TRUE,
assay_name = "relabundance")
p4 <- ggplot(molten_tse2, aes(x = Genus, y = relabundance)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_continuous(label = scales::percent) +
##scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance") + theme_bw() + theme(text = element_text(size = 20), axis.text = element_text(size = 15), axis.title = element_text(size = 15))
print(p4)
sessionInfo()
library(mia)
# Add group information
colData(tse)$Group <- colData(tse)$Sample=="Location"
# Quantify dissimilarities in the original feature space
library(vegan)
x <- assay(tse, "relabundance") # Pick relabunance assay separately
d0 <- as.matrix(vegdist(t(x), "bray"))
# PCoA Ordination
pcoa <- as.data.frame(cmdscale(d0, k = 2))
names(pcoa) <- c("PCoA1", "PCoA2")
# Calculate stress i.e. relative difference in the original and
# projected dissimilarities
stress <- sum((dp - d0)^2)/sum(d0^2)
ord <- order(as.vector(d0))
df <- data.frame(d0 = as.vector(d0)[ord],
dmds = as.vector(dp)[ord])
library(ggplot2)
i<- ggplot(aes(x = d0, y = dmds), data=df) +
geom_smooth() +
geom_point() +
labs(title = "Shepard plot",
x = "Original distance",
y = "MDS distance",
subtitle = paste("Stress:", round(stress, 2))) +
theme_bw()
library(scater)
# Bray-Curtis is usually applied to relative abundances
tse <- transformSamples(tse, method = "relabundance")
# Perform PCoA
tse <- runMDS(tse, FUN = vegan::vegdist, method = "bray", name = "PCoA_BC", exprs_values = "relabundance")
# Create ggplot object
p <- plotReducedDim(tse, "PCoA_BC", colour_by = "Location", point_size= 2.5)
# Create ggplot object
p <- plotReducedDim(tse, "PCoA_BC", colour_by = "Location", point_size= 2.5)
# Add explained variance for each axis
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
# Add explained variance for each axis
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[e>0])
rel_eig <- e/sum(e[e>0])
p <- p + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Location") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
# Bray-Curtis is usually applied to relative abundances
tse <- transformSamples(fam_tse, method = "relabundance")
# Perform PCoA
tse <- runMDS(tse, FUN = vegan::vegdist, method = "bray", name = "PCoA_BC", exprs_values = "relabundance")
# Create ggplot object for Diet
p1 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Diet", point_size= 2.5)
rel_eig <- e/sum(e[e>0])
p1 <- p1 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Diet") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[l>0])
p2 <- p2 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Age") +
theme(legend.position = 'bottom', legend.text=element_text(size=6)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
library(ggrepel)
p3 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Gender", point_size= 2.5, point_alpha= 0.5)
rel_eig <- e/sum(e[l>0])
p3 <- p3 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Gender") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
# Create ggplot object for Family
p4 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Family", point_size= 2.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[l>0])
library(gridExtra)
gridExtra::grid.arrange(p, p1, p2, p3, p4, nrow = 2)
```{r tsealpha, echo=FALSE, message=FALSE, warning=FALSE, error=FALSE, fig.width=2, fig.height=2, fig.show="keep", out.width="50%", fig.show="hold"}
library("mia")
fam_tse <- readRDS("inputdata/processed/TSE/fam_tse.rds")
#Alpha diversity measures
tse <- mia::estimateDiversity(fam_tse,
assay_name = "counts",
index = "shannon",
name = "shannon")
#head(colData(tse)$shannon)
library(ggplot2)
library(patchwork)
library(ggsignif)
df <- as.data.frame(colData(tse))
g <- ggplot(df, aes(x = Family, y = shannon)) +    ## Shannon Diversity family-wise
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
geom_signif(comparisons = "Family", map_signif_level = FALSE, na.rm = TRUE)  + ylab("Shannon") + theme_bw() + theme(text = element_text(size = 20), axis.text = element_text(size = 18), axis.title = element_text(size = 20))
print(g)
print(g)
library(dplyr)
library(dplyr)
COMPS <- combn(LETTERS[1:15],2, simplify = FALSE)
res <- lapply(COMPS, function(comp) {
t.test(df[df$Family==comp[1],"shannon"],df[df$Family==comp[2],"shannon"])$p.value
})
f <- ggplot(df, aes(x = Family, y = shannon)) +    ## Shannon Diversity family-wise
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
geom_signif(comparisons = COMPS[res < 0.05],
map_signif_level = TRUE, na.rm = TRUE,
step_increase=0.25)  + ylab("Shannon") + theme_bw() + theme(text = element_text(size = 20), axis.text = element_text(size = 18), axis.title = element_text(size = 20))
print(f)
b <- ggplot(df, aes(x = Location, y = shannon)) +    ## Shannon Diversity for Geographical_location
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
geom_signif(comparisons = list(c("Pune", "Ahmednagar")), map_signif_level = FALSE, na.rm = TRUE)  + ylab("Shannon") + theme_bw() + theme(text = element_text(size = 20), axis.text = element_text(size = 18), axis.title = element_text(size = 20))
print(b)
b <- ggplot(df, aes(x = Location, y = shannon)) +    ## Shannon Diversity for Geographical_location
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
geom_signif(comparisons = list(c("Pune", "Ahmednagar")), map_signif_level = TRUE, na.rm = TRUE)  + ylab("Shannon") + theme_bw() + theme(text = element_text(size = 20), axis.text = element_text(size = 18), axis.title = element_text(size = 20))
print(b)
b <- ggplot(df, aes(x = Location, y = shannon)) +    ## Shannon Diversity for Geographical_location
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
geom_signif(comparisons = list(c("Pune", "Ahmednagar")), na.rm = TRUE)  + ylab("Shannon") + theme_bw() + theme(text = element_text(size = 20), axis.text = element_text(size = 18), axis.title = element_text(size = 20))
print(b)
b <- ggplot(df, aes(x = Location, y = shannon)) +    ## Shannon Diversity for Geographical_location
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
geom_signif(comparisons = list(c("Pune", "Ahmednagar")), map_signif_level = TRUE, na.rm = TRUE)  + ylab("Shannon") + theme_bw() + theme(text = element_text(size = 20), axis.text = element_text(size = 18), axis.title = element_text(size = 20))
print(b)
c <- ggplot(df, aes(x = Age, y = shannon)) +    ## Shannon Diversity for age groups
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
geom_signif(comparisons = list(c("Adult", "Middle_age"), c("Adult","Elderly"), c("Middle_age", "Elderly")), map_signif_level = TRUE, na.rm = TRUE)  + ylab("Shannon") + theme_bw() + scale_x_discrete(limits = c("Adult","Middle_age", "Elderly"),
labels = c("Adult", "Middle age", "Elderly")) +
theme(text = element_text(size = 20), axis.text = element_text(size = 18), axis.title = element_text(size = 20))
C
print(c)
d <- ggplot(df, aes(x = Diet, y = shannon)) +    ## Shannon Diversity for diet
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
geom_signif(comparisons = list(c("Mixed", "Veg")), map_signif_level = TRUE, na.rm = TRUE)  + ylab("Shannon") + theme_bw() + theme(text = element_text(size = 20), axis.text = element_text(size = 18), axis.title = element_text(size = 20))
e <- ggplot(df, aes(x = Gender, y = shannon)) +    ## Shannon Diversity for diet
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
geom_signif(comparisons = list(c("Female", "Male")), map_signif_level = TRUE, na.rm = FALSE)  + ylab("Shannon") + theme_bw() + theme(text = element_text(size = 20), axis.text = element_text(size = 18), axis.title = element_text(size = 20))
library(gridExtra)
gridExtra::grid.arrange(b, c, d, e, nrow = 1)
gridExtra::grid.arrange(b, c, d, e, nrow = 1)
library(mia)
library(vegan)
library(ggplot2)
library(scater)
library(ggrepel)
library(gridExtra)
library("vegan")
#library(mia)
fam_tse <- readRDS("inputdata/processed/TSE/fam_tse.rds")
tse <- transformCounts(fam_tse, method = "relabundance")
# Add group information
colData(tse)$Group <- colData(tse)$Sample=="Location"
# Quantify dissimilarities in the original feature space
#library(vegan)
x <- assay(tse, "relabundance") # Pick relabunance assay separately
d0 <- as.matrix(vegdist(t(x), "bray"))
# PCoA Ordination
pcoa <- as.data.frame(cmdscale(d0, k = 2))
names(pcoa) <- c("PCoA1", "PCoA2")
# Quantify dissimilarities in the ordination space
dp <- as.matrix(dist(pcoa))
# Calculate stress i.e. relative difference in the original and
# projected dissimilarities
stress <- sum((dp - d0)^2)/sum(d0^2)
ord <- order(as.vector(d0))
df <- data.frame(d0 = as.vector(d0)[ord],
dmds = as.vector(dp)[ord])
i<- ggplot(aes(x = d0, y = dmds), data=df) +
geom_smooth() +
geom_point() +
labs(title = "Shepard plot",
x = "Original distance",
y = "MDS distance",
subtitle = paste("Stress:", round(stress, 2))) +
theme_bw()
#library(scater)
# Bray-Curtis is usually applied to relative abundances
tse <- transformSamples(tse, method = "relabundance")
# Perform PCoA
tse <- runMDS(tse, FUN = vegan::vegdist, method = "bray", name = "PCoA_BC", exprs_values = "relabundance")
# Create ggplot object
p <- plotReducedDim(tse, "PCoA_BC", colour_by = "Location", point_size= 2.5)
# Add explained variance for each axis
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[e>0])
p <- p + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Location") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
#print(p)
# Bray-Curtis is usually applied to relative abundances
tse <- transformSamples(fam_tse, method = "relabundance")
# Perform PCoA
tse <- runMDS(tse, FUN = vegan::vegdist, method = "bray", name = "PCoA_BC", exprs_values = "relabundance")
# Create ggplot object for Diet
p1 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Diet", point_size= 2.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[e>0])
p1 <- p1 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Diet") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
#print(p1)
# Create ggplot object for Age
p2 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Age", point_size= 2.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[l>0])
p2 <- p2 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Age") +
theme(legend.position = 'bottom', legend.text=element_text(size=6)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
#print(p2)
# Create ggplot object for Gender
#library(ggrepel)
p3 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Gender", point_size= 2.5, point_alpha= 0.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[l>0])
p3 <- p3 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Gender") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
# Create ggplot object for Family
p4 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Family", point_size= 2.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[l>0])
p4 <- p4 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Family") + theme(legend.position = 'bottom', legend.text=element_text(size=5)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
#library(gridExtra)
gridExtra::grid.arrange(p, p1, p2, p3, p4, nrow = 2)
## PERMANOVA analysis
#library("vegan")
fam_tse <- readRDS("inputdata/processed/TSE/fam_tse.rds")
tse <- transformSamples(fam_tse, method = "relabundance")
# Agglomerate data to Species level
tse <- agglomerateByRank(tse, rank = "Genus")
# Set seed for reproducibility
set.seed(413)
temp <- anova(
betadisper(
vegdist(t(assay(tse,"relabundance")), method = "bray"),
group = colData(tse)[,"Location"]))
set.seed(1576)
# We choose 99 random permutations
permanova <- adonis2(t(assay(tse,"relabundance")) ~ Location + Diet + Age + Family + Gender,
by = "margin",
data = colData(tse),
method = "bray",
permutations = 999)
head(permanova)
library(mia)
library(vegan)
library(ggplot2)
library(scater)
library(ggrepel)
library(gridExtra)
library("vegan")
#library(mia)
fam_tse <- readRDS("inputdata/processed/TSE/fam_tse.rds")
tse <- transformCounts(fam_tse, method = "relabundance")
# Add group information
colData(tse)$Group <- colData(tse)$Sample=="Location"
# Quantify dissimilarities in the original feature space
#library(vegan)
x <- assay(tse, "relabundance") # Pick relabunance assay separately
d0 <- as.matrix(vegdist(t(x), "bray"))
# PCoA Ordination
pcoa <- as.data.frame(cmdscale(d0, k = 2))
names(pcoa) <- c("PCoA1", "PCoA2")
# Quantify dissimilarities in the ordination space
dp <- as.matrix(dist(pcoa))
# Calculate stress i.e. relative difference in the original and
# projected dissimilarities
stress <- sum((dp - d0)^2)/sum(d0^2)
ord <- order(as.vector(d0))
df <- data.frame(d0 = as.vector(d0)[ord],
dmds = as.vector(dp)[ord])
i<- ggplot(aes(x = d0, y = dmds), data=df) +
geom_smooth() +
geom_point() +
labs(title = "Shepard plot",
x = "Original distance",
y = "MDS distance",
subtitle = paste("Stress:", round(stress, 2))) +
theme_bw()
#library(scater)
# Bray-Curtis is usually applied to relative abundances
tse <- transformSamples(tse, method = "relabundance")
# Perform PCoA
tse <- runMDS(tse, FUN = vegan::vegdist, method = "bray", name = "PCoA_BC", exprs_values = "relabundance")
# Create ggplot object
p <- plotReducedDim(tse, "PCoA_BC", colour_by = "Location", point_size= 2.5)
# Add explained variance for each axis
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[e>0])
p <- p + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Location") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
#print(p)
# Bray-Curtis is usually applied to relative abundances
tse <- transformSamples(fam_tse, method = "relabundance")
# Perform PCoA
tse <- runMDS(tse, FUN = vegan::vegdist, method = "bray", name = "PCoA_BC", exprs_values = "relabundance")
# Create ggplot object for Diet
p1 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Diet", point_size= 2.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[e>0])
p1 <- p1 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Diet") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
#print(p1)
# Create ggplot object for Age
p2 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Age", point_size= 2.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[l>0])
#library(scater)
# Bray-Curtis is usually applied to relative abundances
tse <- transformSamples(tse, method = "relabundance")
# Perform PCoA
tse <- runMDS(tse, FUN = vegan::vegdist, method = "bray", name = "PCoA_BC", exprs_values = "relabundance")
# Create ggplot object
p <- plotReducedDim(tse, "PCoA_BC", colour_by = "Location", point_size= 2.5)
# Add explained variance for each axis
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[e>0])
p <- p + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Location") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
# Bray-Curtis is usually applied to relative abundances
tse <- transformSamples(fam_tse, method = "relabundance")
# Perform PCoA
tse <- runMDS(tse, FUN = vegan::vegdist, method = "bray", name = "PCoA_BC", exprs_values = "relabundance")
# Create ggplot object for Diet
p1 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Diet", point_size= 2.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[e>0])
p1 <- p1 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Diet") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
# Create ggplot object for Age
p2 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Age", point_size= 2.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[l>0])
rel_eig <- e/sum(e[e>0])
p2 <- p2 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Age") +
theme(legend.position = 'bottom', legend.text=element_text(size=6)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
# Create ggplot object for Gender
#library(ggrepel)
p3 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Gender", point_size= 2.5, point_alpha= 0.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[l>0])
rel_eig <- e/sum(e[e>0])
p3 <- p3 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Gender") +
theme(legend.position = 'bottom', legend.text=element_text(size=9)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
# Create ggplot object for Family
p4 <- plotReducedDim(tse, "PCoA_BC", colour_by = "Family", point_size= 2.5)
e <- attr(reducedDim(tse, "PCoA_BC"), "eig");
rel_eig <- e/sum(e[e>0])
p4 <- p4 + labs(x = paste("PCoA 1 (", round(100 * rel_eig[[1]],1), "%", ")", sep = ""),
y = paste("PCoA 2 (", round(100 * rel_eig[[2]],1), "%", ")", sep = ""), title= "Family") + theme(legend.position = 'bottom', legend.text=element_text(size=5)) + theme(axis.text.x = element_text(size=8), axis.text.y = element_text(size = 8)) + theme(axis.title = element_text(size = 10), plot.title = element_text(size = 15))
#library(gridExtra)
gridExtra::grid.arrange(p, p1, p2, p3, p4, nrow = 2)
rmarkdown::render("tse_beta.Rmd", output_format = "md_document")
library(mia)
library(vegan)
library(scater)
library(dplyr)
library(tidyverse)
fam_tse <- readRDS("inputdata/processed/TSE/fam_tse.rds")
tse <- transformCounts(fam_tse, method = "relabundance")
tse <- runMDS(tse, FUN = vegan::vegdist, method = "bray", name = "bray", exprs_values = "relabundance")
##tse <- calculateMDS(tse, method= "bray", FUN = vegan::vegdist,exprs_values = "relabundance")
## two Members of same family
d0 <- assay(tse, "relabundance")
dx <- as.matrix(vegdist(t(d0), method="bray"))
ran <- sample(1:5, 2)
##dx[paste0("A", ran[[1]]), paste0("A", ran[[2]])]
###########set.seed(1234)
beta_compare <- function(families, dx) {
if (families[[1]] == families[[2]]) {
endn <- sum(str_detect(rownames(dx), families[[1]]))
my_rnd <- sample(1:endn, 2)
my_beta <- dx[paste0(families[[1]], my_rnd[[1]]), paste0(families[[2]], my_rnd[[2]])]
first_member <- paste0(families[[1]], my_rnd[[1]])
second_member <- paste0(families[[2]], my_rnd[[2]])
} else {
endn1 <- sum(str_detect(rownames(dx), families[[1]]))
endn2 <- sum(str_detect(rownames(dx), families[[2]]))
my_rnd1 <- sample(1:endn1, 1)
my_rnd2 <- sample(1:endn2, 1)
first_member <- paste0(families[[1]], my_rnd1[[1]])
second_member <- paste0(families[[2]], my_rnd2[[1]])
}
my_beta <- dx[first_member, second_member]
return(list(my_beta,first_member, second_member))
}
set.seed(2345)
beta_values <- c()
families1 <- c()
families2 <- c()
for (first_family in unique(tse$Family)){
for (second_family in unique(tse$Family)){
tmp_res <- beta_compare(c(first_family, second_family ), dx)
beta_values <- c(beta_values, tmp_res[[1]])
families1 <- c(families1, tmp_res[[2]])
families2 <- c(families2, tmp_res[[3]])
}
}
j <- data.frame(BetaComparison = beta_values,
FirstFamily = families1,
SecondFamily = families2)
j<- j %>% mutate(Within = substr(FirstFamily, 1,1) == substr(SecondFamily, 1,1))
theme_bw()
library(ggsignif)
H <- ggplot(j, aes(x = Within, y = BetaComparison)) +
geom_boxplot(outlier.shape = NA) + geom_jitter(width=0.05) +geom_signif(comparisons = list(c("FALSE", "TRUE")), map_signif_level = FALSE) + theme(text = element_text(size = 20)) + labs(x = "Members", y= "Dissimilarity index")
H1<- H + scale_x_discrete(labels=c("TRUE" = "Within family", "FALSE" = "Between family")) + theme_bw()
print(H1)
H <- ggplot(j, aes(x = Within, y = BetaComparison)) +
geom_boxplot(outlier.shape = NA) + geom_jitter(width=0.05) +geom_signif(comparisons = list(c("FALSE", "TRUE")), map_signif_level = FALSE) + theme(text = element_text(size = 10)) + labs(x = "Members", y= "Dissimilarity index")
H1<- H + scale_x_discrete(labels=c("TRUE" = "Within family", "FALSE" = "Between family")) + theme_bw(base_size = 20)
print(H1)
library(mia)
library(vegan)
library(scater)
library(dplyr)
library(tidyverse)
fam_tse <- readRDS("inputdata/processed/TSE/fam_tse.rds")
tse <- transformCounts(fam_tse, method = "relabundance")
tse <- runMDS(tse, FUN = vegan::vegdist, method = "bray", name = "bray", exprs_values = "relabundance")
## two Members of same family
d0 <- assay(tse, "relabundance")
dx <- as.matrix(vegdist(t(d0), method="bray"))
ran <- sample(1:5, 2)
##dx[paste0("A", ran[[1]]), paste0("A", ran[[2]])]
###########set.seed(1234)
beta_compare <- function(families, dx) {
if (families[[1]] == families[[2]]) {
endn <- sum(str_detect(rownames(dx), families[[1]]))
my_rnd <- sample(1:endn, 2)
my_beta <- dx[paste0(families[[1]], my_rnd[[1]]), paste0(families[[2]], my_rnd[[2]])]
first_member <- paste0(families[[1]], my_rnd[[1]])
second_member <- paste0(families[[2]], my_rnd[[2]])
} else {
endn1 <- sum(str_detect(rownames(dx), families[[1]]))
endn2 <- sum(str_detect(rownames(dx), families[[2]]))
my_rnd1 <- sample(1:endn1, 1)
my_rnd2 <- sample(1:endn2, 1)
first_member <- paste0(families[[1]], my_rnd1[[1]])
second_member <- paste0(families[[2]], my_rnd2[[1]])
}
my_beta <- dx[first_member, second_member]
return(list(my_beta,first_member, second_member))
}
set.seed(2345)
beta_values <- c()
families1 <- c()
families2 <- c()
for (first_family in unique(tse$Family)){
for (second_family in unique(tse$Family)){
tmp_res <- beta_compare(c(first_family, second_family ), dx)
beta_values <- c(beta_values, tmp_res[[1]])
families1 <- c(families1, tmp_res[[2]])
families2 <- c(families2, tmp_res[[3]])
}
}
j <- data.frame(BetaComparison = beta_values,
FirstFamily = families1,
SecondFamily = families2)
j<- j %>% mutate(Within = substr(FirstFamily, 1,1) == substr(SecondFamily, 1,1))
theme_bw()
library(ggsignif)
H <- ggplot(j, aes(x = Within, y = BetaComparison)) +
geom_boxplot(outlier.shape = NA) + geom_jitter(width=0.05) +geom_signif(comparisons = list(c("FALSE", "TRUE")), map_signif_level = FALSE) + theme(text = element_text(size = 20)) + labs(x = "Members", y= "Dissimilarity index")
H1<- H + scale_x_discrete(labels=c("TRUE" = "Within family", "FALSE" = "Between family")) + theme_bw()
print(H1)
H <- ggplot(j, aes(x = Within, y = BetaComparison)) +
geom_boxplot(outlier.shape = NA) + geom_jitter(width=0.05) +geom_signif(comparisons = list(c("FALSE", "TRUE")), map_signif_level = FALSE) + theme(text = element_text(size = 10)) + labs(x = "Members", y= "Dissimilarity index")
H1<- H + scale_x_discrete(labels=c("TRUE" = "Within family", "FALSE" = "Between family")) + theme_bw(base_size = 20)
print(H1)
rmarkdown::render("RF.Rmd", output_format = "md_document")
