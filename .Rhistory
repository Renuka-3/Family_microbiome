a <- aggregate_taxa(temp.phy, level = "Genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1),
sd= round(sd(value),2))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 20, topn=20)
theme_set(theme_bw(base_size = 18))
core_detection1 <- .1/100
core_prevalence <- 20/100
b <- aggregate_taxa(temp.phy, "Genus")
b <- microbiome::transform(b, "compositional")
b.core <- core(b, detection = core_detection1, prevalence = core_prevalence)
x <- prevalence(b.core)
bs <- melt(abundances(b.core))
bs$new <- bs$Var1
bs$new <- gsub(bs$new, pattern = "Propionibacterium", replacement = "Cutibacterium")
names(x) <- gsub(names(x), pattern = "Propionibacterium", replacement = "Cutibacterium")
df <- data.frame(Genus = names(x), prevalence = x) %>% arrange(prevalence)
sorted.names <- df$Genus
df$Genus <- factor(df$Genus, levels = sorted.names)
bs$new <- factor(bs$new, levels=sorted.names)
p4 <- ggplot(bs, aes(x = new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_continuous(label = scales::percent) +
#scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance")
p4
summarize_phyloseq(temp.phy)
summarize_phyloseq(physeqnew)
summarize_phyloseq(temp.phy)
get_taxa_unique(temp.phy, "Phylum")
get_taxa_unique(temp.phy, "Class")
get_taxa_unique(temp.phy, "Order")
get_taxa_unique(temp.phy, "Family")
get_taxa_unique(temp.phy, "Genus")
physeqnew
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(knitr)
require(knitcitations)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
core_detection <- .1/100
core_prevalence <- 20/100
# Was created with: source("create_phyloseq.R")
physeqnew <- readRDS("inputdata/processed/phyloseq/physeqnew.RDS")
temp.phy <- filter_taxa(physeqnew, function (x) {sum(x > 0) > 1}, prune=TRUE)
summarize_phyloseq(temp.phy)
#get_taxa_unique(temp.phy, "Genus")
library(knitr)
a <- aggregate_taxa(temp.phy, level = "Genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1),
sd= round(sd(value),2))%>%
arrange(desc(mean))
dfm
a
xc <- abundances(transform(a, "compositional"))
xc
tax_table(temp.phy)
otu_table(temp.phy)
temp.phy
otu_table(temp.phy)
View(otu_table(temp.phy))
otu_table(physeqnew)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(knitr)
require(knitcitations)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
core_detection <- .1/100
core_prevalence <- 20/100
# Was created with: source("create_phyloseq.R")
physeqnew <- readRDS("inputdata/processed/phyloseq/physeqnew.RDS")
temp.phy <- filter_taxa(physeqnew, function (x) {sum(x > 0) > 1}, prune=TRUE)
summarize_phyloseq(temp.phy)
#get_taxa_unique(temp.phy, "Genus")
ps <- aggregate_taxa(temp.phy, "Phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- round(apply(abundances(ps.core), 1, sd), 2)
###sd <- sd(abundances(ps.core))
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev, sd = sd))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)", "Standard deviation")
kable(d)
d
l <- ggplot(d, x= Taxon, y= Mean Relative Abundance)+ geom_bar()
l <- ggplot(d, x= Taxon, y= Mean Relative Abundance (%))+ geom_bar()
l <- ggplot(d, x= Taxon, y= Mean Relative abundance (%))+ geom_bar()
l <- ggplot(d, x= Taxon, y= Mean Relative abundance) + geom_bar()
l <- ggplot(d, x= Taxon, y= Mean Relative abundance (%)) + geom_bar()
l <- ggplot(d, x= d$Taxon, y= d$Mean Relative abundance (%)) + geom_bar()
d$`Mean Relative abundance (%)`
l <- ggplot(d, x= d$Taxon, y= d$Mean Relative abundance(%)) + geom_bar()
ps <- aggregate_taxa(temp.phy1, "Genus")
ps <- aggregate_taxa(temp.phy, "Genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Abundance_median = median, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Median Relative abundance (%)", "Prevalence (%)")
kable(d)
theme_set(theme_bw(base_size = 13))
dfm <- melt(abundances(ps.core))
dfm$Var1 <- factor(dfm$Var1, levels = rev(d$Taxon))
dfm$Var_new = str_wrap(dfm$Var1, width = 40)
p2 <- ggplot(dfm, aes(x = Var_new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
print(p2)
temp.phy
View(otu_table(temp.phy))
View(otu_table(phy))
View(otu_table(phylo))
d
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(knitr)
require(knitcitations)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
core_detection <- .1/100
core_prevalence <- 20/100
# Was created with: source("create_phyloseq.R")
physeqnew <- readRDS("inputdata/processed/phyloseq/physeqnew.RDS")
temp.phy <- filter_taxa(physeqnew, function (x) {sum(x > 0) > 1}, prune=TRUE)
summarize_phyloseq(temp.phy)
#get_taxa_unique(temp.phy, "Genus")
transform <- microbiome::transform
j <- transform(temp.phy, "compositional")
sp <- aggregate_taxa(j, "Phylum")
o <- aggregate_rare(sp, level = 'Phylum',detection = 0.1/100, prevalence = 20/100, include.lowest =TRUE)
phyla.ordering <- names(sort(rowMeans(abundances(transform(o, "compositional")))))
df <- psmelt(o)
df$Phylum <- factor(df$phylum, levels=phyla.ordering)
sorted.samples.by.Firmicutes <- unlist(subset(df, Phylum=="Firmicutes") %>% arrange(Abundance) %>% select(Sample))
df$Sample <- factor(df$Sample, levels = sorted.samples.by.Firmicutes)
w <- df %>% filter (Geographical_location=="Ahmednagar")
w <- df %>% filter (Location=="Ahmednagar")
f <- ggplot(w, aes(x = Sample, fill = Phylum, y = Abundance)) + geom_bar(stat = "identity", colour = "black") +
labs(y =  "Relative abundance (%)", x = "Individuals") + scale_y_continuous(label=scales::percent) + scale_fill_brewer("Phylum", palette = "Set3") + facet_grid(Geographical_location ~ .) + facet_grid(cols = vars(Geographical_location)) + theme(axis.text.x = element_blank(),legend.position = "none")
print(f)
transform <- microbiome::transform
j <- transform(temp.phy, "compositional")
sp <- aggregate_taxa(j, "Phylum")
sp <- aggregate_taxa(j, "Phylum")
o <- aggregate_rare(sp, level = 'Phylum',detection = 0.1/100, prevalence = 20/100, include.lowest =TRUE)
phyla.ordering <- names(sort(rowMeans(abundances(transform(o, "compositional")))))
df <- psmelt(o)
df
#df$Phylum <- factor(df$phylum, levels=phyla.ordering)
sorted.samples.by.Firmicutes <- unlist(subset(df, Phylum=="Firmicutes") %>% arrange(Abundance) %>% select(Sample))
df$Sample <- factor(df$Sample, levels = sorted.samples.by.Firmicutes)
w <- df %>% filter (Location=="Ahmednagar")
f <- ggplot(w, aes(x = Sample, fill = Phylum, y = Abundance)) + geom_bar(stat = "identity", colour = "black") +
labs(y =  "Relative abundance (%)", x = "Individuals") + scale_y_continuous(label=scales::percent) + scale_fill_brewer("Phylum", palette = "Set3") + facet_grid(Geographical_location ~ .) + facet_grid(cols = vars(Geographical_location)) + theme(axis.text.x = element_blank(),legend.position = "none")
print(f)
f <- ggplot(w, aes(x = Sample, fill = Phylum, y = Abundance)) + geom_bar(stat = "identity", colour = "black") +
labs(y =  "Relative abundance (%)", x = "Individuals") + scale_y_continuous(label=scales::percent) + scale_fill_brewer("Phylum", palette = "Set3") + facet_grid(Location ~ .) + facet_grid(cols = vars(Geographical_location)) + theme(axis.text.x = element_blank(),legend.position = "none")
print(f)
f <- ggplot(w, aes(x = Sample, fill = Phylum, y = Abundance)) + geom_bar(stat = "identity", colour = "black") +
labs(y =  "Relative abundance (%)", x = "Individuals") + scale_y_continuous(label=scales::percent) + scale_fill_brewer("Phylum", palette = "Set3") + facet_grid(Location ~ .) + facet_grid(cols = vars(Location)) + theme(axis.text.x = element_blank(),legend.position = "none")
print(f)
df
df$Sample <- factor(df$Sample, levels = sorted.samples.by.Firmicutes)
w <- df %>% filter (Family)
#w <- df %>% filter (Family)
f <- ggplot(df, aes(x = Sample, fill = Phylum, y = Abundance)) + geom_bar(stat = "identity", colour = "black") +
labs(y =  "Relative abundance (%)", x = "Individuals") + scale_y_continuous(label=scales::percent) + scale_fill_brewer("Phylum", palette = "Set3") + facet_grid(Family ~ .) + facet_grid(cols = vars(Family)) + theme(axis.text.x = element_blank(),legend.position = "none")
print(f)
w <- df %>% filter (Family=="A")
f <- ggplot(w, aes(x = Sample, fill = Phylum, y = Abundance)) + geom_bar(stat = "identity", colour = "black") +
labs(y =  "Relative abundance (%)", x = "Individuals") + scale_y_continuous(label=scales::percent) + scale_fill_brewer("Phylum", palette = "Set3") + facet_grid(Family ~ .) + facet_grid(cols = vars(Family)) + theme(axis.text.x = element_blank(),legend.position = "none")
print(f)
j <- transform(temp.phy, "compositional")
sp <- aggregate_taxa(j, "Genus")
o <- aggregate_rare(sp, level = 'Genus',detection = 0.1/100, prevalence = 20/100, include.lowest =TRUE)
phyla.ordering <- names(sort(rowMeans(abundances(transform(o, "compositional")))))
df <- psmelt(o)
#df$Phylum <- factor(df$phylum, levels=phyla.ordering)
sorted.samples.by.Firmicutes <- unlist(subset(df, Phylum=="Firmicutes") %>% arrange(Abundance) %>% select(Sample))
df
#df$Phylum <- factor(df$phylum, levels=phyla.ordering)
sorted.samples.by.Staphylococcus <- unlist(subset(df, Genus=="Staphylococcus") %>% arrange(Abundance) %>% select(Sample))
df$Sample <- factor(df$Sample, levels = sorted.samples.by.Staphylococcus)
w <- df %>% filter (Family=="A")
f <- ggplot(w, aes(x = Sample, fill = Genus, y = Abundance)) + geom_bar(stat = "identity", colour = "black") +
labs(y =  "Relative abundance (%)", x = "Individuals") + scale_y_continuous(label=scales::percent) + scale_fill_brewer("Phylum", palette = "Set3") + facet_grid(Family ~ .) + facet_grid(cols = vars(Family)) + theme(axis.text.x = element_blank(),legend.position = "none")
print(f)
df
pl <- ggplot(df, aes(x=Family, fill= Genus, y= Abundance))+ geom_bar(stat = "identity", colour = "black")
pl
transform <- microbiome::transform
j <- transform(temp.phy, "compositional")
sp <- aggregate_taxa(j, "Genus")
o <- aggregate_rare(sp, level = 'Genus',detection = 0.1/100, prevalence = 20/100, include.lowest =TRUE)
phyla.ordering <- names(sort(rowMeans(abundances(transform(o, "compositional")))))
df <- psmelt(o)
#df$Phylum <- factor(df$phylum, levels=phyla.ordering)
sorted.samples.by.Staphylococcus <- unlist(subset(df, Genus=="Staphylococcus") %>% arrange(Abundance) %>% select(Sample))
df$Sample <- factor(df$Sample, levels = sorted.samples.by.Staphylococcus)
pl <- ggplot(df, aes(x=Family, fill= Genus, y= Abundance))+ geom_bar(stat = "identity", colour = "black") labs(y =  "Relative abundance (%)", x = "Family") + scale_y_continuous(label=scales::percent) + facet_grid(Family ~ .) + facet_grid(cols = vars(Family)) + theme(axis.text.x = element_blank(),legend.position = "none")
pl <- ggplot(df, aes(x=Family, fill= Genus, y= Abundance))+ geom_bar(stat = "identity", colour = "black") + labs(y =  "Relative abundance (%)", x = "Family") + scale_y_continuous(label=scales::percent) + facet_grid(Family ~ .) + facet_grid(cols = vars(Family)) + theme(axis.text.x = element_blank(),legend.position = "none")
print(pl)
pl <- ggplot(df, aes(x=Family, fill= Genus, y= Abundance))+ geom_bar(stat = "identity", colour = "black") + labs(y =  "Relative abundance (%)", x = "Family") + scale_y_continuous(label=scales::percent)
print(pl)
df
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(knitr)
require(knitcitations)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
core_detection <- .1/100
core_prevalence <- 20/100
# Was created with: source("create_phyloseq.R")
physeqnew <- readRDS("inputdata/processed/phyloseq/physeqnew.RDS")
temp.phy <- filter_taxa(physeqnew, function (x) {sum(x > 0) > 1}, prune=TRUE)
summarize_phyloseq(temp.phy)
#get_taxa_unique(temp.phy, "Genus")
ps <- aggregate_taxa(temp.phy, "Phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- round(apply(abundances(ps.core), 1, sd), 2)
###sd <- sd(abundances(ps.core))
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev, sd = sd))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)", "Standard deviation")
kable(d)
l <- ggplot(d, x= Taxon, y= Mean Relative Abundance)+ geom_bar()
kable(d)
library(knitr)
a <- aggregate_taxa(temp.phy, level = "Genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1),
sd= round(sd(value),2))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 20, topn=20)
library(knitr)
a <- aggregate_taxa(temp.phy, level = "Genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1),
sd= round(sd(value),2))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 10, topn=10)
rmarkdown::render("taxonomyprofile.Rmd", output_format = md_document)
rmarkdown::render("taxonomyprofile.Rmd", output_format = "md_document")
rmarkdown::render(Betadiversity.Rmd,output_format = "md_document")
rmarkdown::render("Betadiversity.Rmd" ,output_format = "md_document")
library(knitr)
library(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(dplyr)
library(vegan)
library(ggpubr)
library(gridExtra)
theme_set(theme_bw(20))
# Was created with: source("create_phyloseq.R")
physeqnew <- readRDS("inputdata/processed/phyloseq/physeqnew.RDS")
temp.phy <- filter_taxa(physeqnew, function (x) {sum(x > 0) > 1}, prune=TRUE)
A <- alpha(temp.phy)
df <- meta(temp.phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(Family))$p.value
kruskal.test(data = df, index ~ factor(Family))
library(ggbeeswarm)
library(ggsignif)
#p1 <- ggplot(df, aes(x = Family, y = index, color = Family)) + geom_jitter(position=position_jitter(0.1), cex=2.0) +
#theme(legend.position="none") +
#       labs(y = "Shannon index", x = "Family") + title = paste0("Kruskal test p=", round(pv, 2))
p1 <- ggplot(df, aes(x = Family, y = index, color = Family)) +
geom_boxplot() + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +
labs(y = "Shannon Diversity", x = "", title = "Family")
print(p1)
#A <- alpha(temp.phy)
df <- meta(temp.phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
ppv <- wilcox.test(data = df, index ~ factor(Diet))$p.value
wilcox.test(data = df, index ~factor(Diet))
p2 <- ggplot(df, aes(x = Diet, y = index, color = Diet)) +
geom_boxplot() +
geom_jitter(width = 0.05) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +scale_x_discrete(limits = c("Mixed", "Veg"),
labels = c("Mixed", "Vegetarian")) +theme(legend.position = "none")+
labs(y = "Shannon Diversity",
x = "",
title = "Diet") + geom_signif(comparisons = list(c("Mixed", "Veg")), map_signif_level = TRUE)
print(p2)
## Multiple pairwise comparison
qw <- subset(df, Diet %in% c("Mixed", "Veg"))
renu <- wilcox.test(data = qw, index ~ factor(Diet))$p.value
wilcox.test(data = qw, index ~factor(Diet))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
#A <- alpha(temp.phy)
df <- meta(temp.phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(Age))$p.value
kruskal.test(data = df, index ~factor(Age))
p3 <- ggplot(df, aes(x = Age, y = index, color = Age)) +  geom_boxplot() + geom_jitter(position=position_jitter(0.1), cex=2.0) +                     theme(legend.position="none") +
theme(axis.title.x = element_text()) + scale_x_discrete(limits = c("Adult", "Elderly", "Middle_age"), labels = c("Adult", "Elderly", "Middle age")) +
labs(y = "Shannon index", x = "Age", title = "Age") + geom_signif(comparisons = list(c("Mixed", "Veg")), map_signif_level = TRUE)
print(p3)
## Multiple pairwise comparison
RE <- subset(df, Age %in% c("Adult", "Middle_age"))
Renz <- wilcox.test(data = RE, index ~ factor(Age))$p.value
wilcox.test(data = RE, index ~factor(Age))
NU<- subset(df, Age %in% c("Adult", "Elderly"))
RUK <- wilcox.test(data = NU, index ~ factor(Age))$p.value
wilcox.test(data = NU, index ~factor(Age))
KA<- subset(df, Age %in% c("Middle_age", "Elderly"))
RUS <- wilcox.test(data = KA, index ~ factor(Age))$p.value
wilcox.test(data = KA, index ~factor(Age))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
#A <- alpha(temp.phy)
df <- meta(temp.phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
pv <- wilcox.test(data = df, index ~ factor(Gender))$p.value
wilcox.test(data = df, index ~ factor(Gender))
p4 <- ggplot(df, aes(x = Gender, y = index, color = Gender)) +
geom_boxplot() + geom_jitter(width = 0.05) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +theme(legend.position = "none")+
labs(y = "Shannon Diversity",
x = "",
title = "Gender") + geom_signif(comparisons = list(c("Male", "Female")), map_signif_level = TRUE)
print(p4)
#A <- alpha(temp.phy)
df <- meta(temp.phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
vp <- wilcox.test(data = df, index ~ factor(Location))$p.value
wilcox.test(data = df, index ~ factor(Location))
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) + geom_boxplot() +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
A <- alpha(temp.phy)
b <- meta(temp.phy)
b2 <- bind_cols(b,A)
is.data.frame(b)
is.data.frame(b2)
z<- sapply(split(b2$diversity_shannon, b2$Location), mean)
f <- sapply(split(b2$diversity_shannon, b2$Location), sd)
v <- cbind(z,f)
kable(v)
theme_set(theme_bw(base_size=25))
library(Cairo)
df <- meta(temp.phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- wilcox.test(data = df, index ~ factor(Location))$p.value
wilcox.test(data = df, index ~factor(Location))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = Location, y = index)) +
geom_boxplot(color = "black") + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) + theme(legend.position = "none")+
labs(y = "Shannon Diversity", x = "", title = "Geographical location") +
geom_signif(comparisons = list(c("Ahmednagar", "Pune")), map_signif_level = TRUE)
print(p1)
qw <- subset(df, Location %in% c("Ahmednagar", "Pune"))
renu <- wilcox.test(data = qw, index ~ factor(Location))$p.value
wilcox.test(data = qw, index ~factor(Location))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
df <- meta(temp.phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- wilcox.test(data = df, index ~ factor(Location))$p.value
wilcox.test(data = df, index ~factor(Location))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = Location, y = index)) +
geom_boxplot(color = "black") + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) + theme(legend.position = "none")+
labs(y = "Shannon Diversity", x = "", title = "Geographical location") +
geom_signif(comparisons = list(c("Ahmednagar", "Pune")), map_signif_level = TRUE)
print(p1)
qw <- subset(df, Location %in% c("Ahmednagar", "Pune"))
renu <- wilcox.test(data = qw, index ~ factor(Location))$p.value
wilcox.test(data = qw, index ~factor(Location))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
df <- meta(temp.phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- wilcox.test(data = df, index ~ factor(Location))$p.value
wilcox.test(data = df, index ~factor(Location))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = Location, y = index)) +
geom_boxplot() + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) + theme(legend.position = "none")+
labs(y = "Shannon Diversity", x = "", title = "Geographical location") +
geom_signif(comparisons = list(c("Ahmednagar", "Pune")), map_signif_level = TRUE)
print(p1)
qw <- subset(df, Location %in% c("Ahmednagar", "Pune"))
renu <- wilcox.test(data = qw, index ~ factor(Location))$p.value
wilcox.test(data = qw, index ~factor(Location))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
df <- meta(temp.phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- wilcox.test(data = df, index ~ factor(Location))$p.value
wilcox.test(data = df, index ~factor(Location))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = Location, y = index)) +
geom_boxplot() + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) + theme(legend.position = "none")+
labs(y = "Shannon Diversity", x = "", title = "Geographical location") +
geom_signif(comparisons = list(c("Ahmednagar", "Pune")), map_signif_level = TRUE)
print(p1)
qw <- subset(df, Location %in% c("Ahmednagar", "Pune"))
renu <- wilcox.test(data = qw, index ~ factor(Location))$p.value
wilcox.test(data = qw, index ~factor(Location))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
rmarkdown::render("alphadiversity.Rmd", output_format = "md_document")
