df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
#pv <- kruskal.test(data = df, index ~ factor(Family))$p.value
p3 <- ggplot(df, aes(x = Age, y = index, color = Age)) + geom_jitter(position=position_jitter(0.1), cex=2.0) +                     theme(legend.position="none") +
theme(axis.title.x = element_text()) #+scale_x_discrete(limits = c("Adult", "Elderly", "Middle_age"), labels = c("Adult", "Elderly", "Middle age")) +
labs(y = "Shannon index", x = "Age") #title = paste0("Kruskal test p=", round(pv, 2)))
print(p3)
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
#pv <- kruskal.test(data = df, index ~ factor(Family))$p.value
p3 <- ggplot(df, aes(x = Age, y = index, color = Age)) + geom_jitter(position=position_jitter(0.1), cex=2.0) +                     theme(legend.position="none") +
theme(axis.title.x = element_text()) #+scale_x_discrete(limits = c("Adult", "Elderly", "Middle_age"), labels = c("Adult", "Elderly", "Middle age")) +
labs(y = "Shannon index", x = "Age") #title = paste0("Kruskal test p=", round(pv, 2)))
#print(p3)
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
#pv <- kruskal.test(data = df, index ~ factor(Family))$p.value
p3 <- ggplot(df, aes(x = Age, y = index, color = Age)) + geom_jitter(position=position_jitter(0.1), cex=2.0) +                     theme(legend.position="none") +
theme(axis.title.x = element_text()) #+scale_x_discrete(limits = c("Adult", "Elderly", "Middle_age"), labels = c("Adult", "Elderly", "Middle age"))
+ labs(y = "Shannon index", x = "Age") #title = paste0("Kruskal test p=", round(pv, 2)))
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
#pv <- kruskal.test(data = df, index ~ factor(Family))$p.value
p3 <- ggplot(df, aes(x = Age, y = index, color = Age)) + geom_jitter(position=position_jitter(0.1), cex=2.0) +                     theme(legend.position="none") +
theme(axis.title.x = element_text()) + #scale_x_discrete(limits = c("Adult", "Elderly", "Middle_age"), labels = c("Adult", "Elderly", "Middle age")) +
labs(y = "Shannon index", x = "Age") #title = paste0("Kruskal test p=", round(pv, 2)))
#print(p3)
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
theme_set(theme_bw(base_size = 25))
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
theme_set(theme_bw(base_size = 25))
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
#A <- alpha(phy
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
#A <- alpha(phy
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
library(knitr)
library(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(dplyr)
library(vegan)
library(ggpubr)
library(gridExtra)
theme_set(theme_bw(20))
# Was created with: source("create_phyloseq.R")
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
#pv <- kruskal.test(data = df, index ~ factor(Family))$p.value
p1 <- ggplot(df, aes(x = Family, y = index, color = Family)) + geom_jitter(position=position_jitter(0.1), cex=2.0) +                     theme(legend.position="none") +
labs(y = "Shannon index", x = "Family") #title = paste0("Kruskal test p=", round(pv, 2)))
#print(p1)
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p2 <- ggplot(df, aes(x = Diet, y = index, color = Diet)) + geom_jitter(position=position_jitter(0.1), cex=2.0) +                     theme(legend.position="none") + #theme(scale_x_discrete(limits = c("Mixed", "Veg"),labels = c("Mixed", "Vegetarian"))) +
labs(y = "Shannon index", x = "Diet") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p2)
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
#pv <- kruskal.test(data = df, index ~ factor(Family))$p.value
p3 <- ggplot(df, aes(x = Age, y = index, color = Age)) + geom_jitter(position=position_jitter(0.1), cex=2.0) +                     theme(legend.position="none") +
theme(axis.title.x = element_text()) + #scale_x_discrete(limits = c("Adult", "Elderly", "Middle_age"), labels = c("Adult", "Elderly", "Middle age")) +
labs(y = "Shannon index", x = "Age") #title = paste0("Kruskal test p=", round(pv, 2)))
#print(p3)
#A <- alpha(phy)
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p4 <- ggplot(df, aes(x = Gender, y = index, color = Gender)) + geom_jitter(position=position_jitter(0.1), cex=2.0)                     + theme(legend.position="none") +
labs(y = "Shannon index", x = "Gender") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p4)
#A <- alpha(phy
df <- meta(phy)
df <- bind_cols(df, A)
index <- "diversity_shannon"
df$index <- df[[index]]
##ppv <- kruskal.test(data = df, index ~ factor(Diet))$p.value
p5 <- ggplot(df, aes(x = Location, y = index, color = Location)) +
geom_jitter(position=position_jitter(0.1), cex=2.0) +
theme(legend.position="none") +
labs(y = "Shannon index", x = "Location") #+ title = paste0 "Kruskal test p="", round(pv, 2))
#print(p5)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
rmarkdown::render("Alphadiversity.Rmd", "Alphadiversity.md")
rmarkdown::render("Alphadiversity.Rmd", output_format = "Alphadiversity.md")
rmarkdown::render("Alphadiversity.Rmd", output_format = md_document)
rmarkdown::render("Alphadiversity.Rmd", output_format = "md_document")
?adonis
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
p_adj_method <- "BH";
alpha <- 0.05
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
#PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=99,
method = distance, p_adj_method,
alpha)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
#p_adj_method <- "BH";
#alpha <- 0.05
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
#PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=99,
method = distance)
print(per)
#PERMANOVA analysis for Age
pe <- adonis(t(otu_table(phy)) ~ Age,
data = meta(phy),
permutations=99,
method = distance)
print(pe)
#PERMANOVA analysis for gender
perm <- adonis(t(otu_table(phy)) ~ Gender,
data = meta(phy),
permutations=99,
method = distance)
print(perm)
#PERMANOVA analysis for Geographical location
perma <- adonis(t(otu_table(phy)) ~ Location,
data = meta(phy),
permutations=99,
method = distance)
print(perma)
#PERMANOVA analysis for Family
perman <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=99,
method = distance)
print(perman)
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
theme_set(theme_bw(30))
p1 <- plot_landscape(microbiome::transform(phy, "compositional"),
distance = distance,
method = method,
size = 5,
col = "Diet",
shading = FALSE)+
scale_colour_brewer(palette = "Set1")	+ labs(title = "Diet") + theme(legend.position = 'bottom', legend.text=element_text(size=20), legend.title=element_text(size=25))
p2 <- plot_landscape(microbiome::transform(phy, "compositional"),
distance = distance,
method = method,
size = 5,
col = "Age",
shading = FALSE)+
scale_colour_brewer(palette = "Set1")	+ labs(title = "Age") + theme(legend.position = 'bottom', legend.text=element_text(size=20), legend.title=element_text(size=25))
p3 <- plot_landscape(microbiome::transform(phy, "compositional"),
distance = distance,
method = method,
size = 5,
col = "Gender",
shading = FALSE)+
scale_colour_brewer(palette = "Set1")	+ labs(title = "Gender") + theme(legend.position = 'bottom', legend.text=element_text(size=20), legend.title=element_text(size=25))
p4 <- plot_landscape(microbiome::transform(phy, "compositional"),
distance = distance,
method = method,
size = 5,
col = "Location",
shading = FALSE)+
scale_colour_brewer(palette = "Set1")	+ labs(title = "Location") + theme(legend.position = 'bottom', legend.text=element_text(size=20), legend.title=element_text(size=25))
p5 <- plot_landscape(microbiome::transform(phy, "compositional"),
distance = distance,
method = method,
size = 5,
col = "Family",
shading = FALSE)+
scale_colour_brewer(palette = "Set1")	+ labs(title = "Family") + theme(legend.position = 'bottom', legend.text=element_text(size=20), legend.title=element_text(size=25))
gridExtra::grid.arrange(p1, p2, p3, p4, p5, nrow = 2)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
#p_adj_method <- "BH";
#alpha <- 0.05
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
#PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=99,
method = distance)
print(per)
#PERMANOVA analysis for Age
pe <- adonis(t(otu_table(phy)) ~ Age,
data = meta(phy),
permutations=99,
method = distance)
print(pe)
#PERMANOVA analysis for gender
perm <- adonis(t(otu_table(phy)) ~ Gender,
data = meta(phy),
permutations=99,
method = distance)
print(perm)
#PERMANOVA analysis for Geographical location
perma <- adonis(t(otu_table(phy)) ~ Location,
data = meta(phy),
permutations=99,
method = distance)
print(perma)
#PERMANOVA analysis for Family
perman <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=99,
method = distance)
print(perman)
print(per)
#PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=99,
method = distance)
print(per)
#p_adj_method <- "BH"
#alpha <- 0.05
Per.results <- list()
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
p_adj_method <- "BH"
alpha <- 0.05
Per.results <- list()
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
# PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=99,
method = distance)
print(per)
# PERMANOVA analysis for Age
pe <- adonis(t(otu_table(phy)) ~ Age,
data = meta(phy),
permutations=99,
method = distance)
print(pe)
print(pe)
# PERMANOVA analysis for gender
perm <- adonis(t(otu_table(phy)) ~ Gender,
data = meta(phy),
permutations=99,
method = distance)
print(perm)
# PERMANOVA analysis for Geographical location
perma <- adonis(t(otu_table(phy)) ~ Location,
data = meta(phy),
permutations=99,
method = distance)
# PERMANOVA analysis for Geographical location
perma <- adonis(t(otu_table(phy)) ~ Location,
data = meta(phy),
permutations=99,
method = distance)
print(perma)
# PERMANOVA analysis for Family
perman <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=99,
method = distance)
print(perman)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
p_adj_method <- "BH"
alpha <- 0.05
results <- list()
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
# PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=99,
method = distance)
print(per)
# PERMANOVA analysis for Age
pe <- adonis(t(otu_table(phy)) ~ Age,
data = meta(phy),
permutations=99,
method = distance)
print(pe)
# PERMANOVA analysis for gender
perm <- adonis(t(otu_table(phy)) ~ Gender,
data = meta(phy),
permutations=99,
method = distance)
print(perm)
# PERMANOVA analysis for Geographical location
perma <- adonis(t(otu_table(phy)) ~ Location,
data = meta(phy),
permutations=99,
method = distance)
print(perma)
# PERMANOVA analysis for Family
perman <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=99,
method = distance)
print(perman)
results
library(knitr)
library(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(dplyr)
library(vegan)
library(ggpubr)
library(gridExtra)
theme_set(theme_bw(20))
# Was created with: source("create_phyloseq.R")
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
summarize_phyloseq(phy)
library(ggplot2)
library(phyloseq)
library(dada2)
library(dada2)
library(readxl)
library(dplyr)
physeq
library(ggplot2)
library(phyloseq)
library(dada2)
library(dada2)
library(readxl)
library(dplyr)
physeq
library(ape)
library(ape)
random_tree = rtree(ntaxa(phyloseq), rooted=TRUE, tip.label=taxa_names(phyloseq))
ape::write. tree(random_tree, file='famtree.nwk')
ape::write.tree(random_tree, file='famtree.nwk')
famtree <- ape::read.tree("famtree.nwk")
famtree
