library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
p_adj_method <- "BH"
alpha <- 0.05
results <- list()
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
# PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=99,
method = distance)
print(per)
# PERMANOVA analysis for Age
pe <- adonis(t(otu_table(phy)) ~ Age,
data = meta(phy),
permutations=99,
method = distance)
print(pe)
# PERMANOVA analysis for gender
perm <- adonis(t(otu_table(phy)) ~ Gender,
data = meta(phy),
permutations=99,
method = distance)
print(perm)
# PERMANOVA analysis for Geographical location
perma <- adonis(t(otu_table(phy)) ~ Location,
data = meta(phy),
permutations=99,
method = distance)
print(perma)
# PERMANOVA analysis for Family
perman <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=99,
method = distance)
print(perman)
results
print(results)
# PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=99,
method = distance)
print(per)
list(t(otu_table(phy)), Diet)
list(t(otu_table(phy))
list(t(otu_table(phy)))
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
p_adj_method <- "BH"
alpha <- 0.05
#results <- list()
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
# PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=99,
method = distance)
print(per)
# PERMANOVA analysis for Age
pe <- adonis(t(otu_table(phy)) ~ Age,
data = meta(phy),
permutations=99,
method = distance)
print(pe)
# PERMANOVA analysis for gender
perm <- adonis(t(otu_table(phy)) ~ Gender,
data = meta(phy),
permutations=99,
method = distance)
print(perm)
# PERMANOVA analysis for Geographical location
perma <- adonis(t(otu_table(phy)) ~ Location,
data = meta(phy),
permutations=99,
method = distance)
print(perma)
# PERMANOVA analysis for Family
perman <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=99,
method = distance)
print(perman)
# PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=99,
method = distance)
print(per)
# PERMANOVA analysis for Diet
per <- adonis(t(otu_table(phy)) ~ Diet,
data = meta(phy),
permutations=199,
method = distance)
print(per)
# PERMANOVA analysis for Age
pe <- adonis(t(otu_table(phy)) ~ Age,
data = meta(phy),
permutations=199,
method = distance)
# PERMANOVA analysis for Age
pe <- adonis(t(otu_table(phy)) ~ Age,
data = meta(phy),
permutations=199,
method = distance)
print(pe)
# PERMANOVA analysis for gender
perm <- adonis(t(otu_table(phy)) ~ Gender,
data = meta(phy),
permutations=199,
method = distance)
print(perm)
# PERMANOVA analysis for Geographical location
perma <- adonis(t(otu_table(phy)) ~ Location,
data = meta(phy),
permutations=199,
method = distance)
# PERMANOVA analysis for Geographical location
perma <- adonis(t(otu_table(phy)) ~ Location,
data = meta(phy),
permutations=199,
method = distance)
print(perma)
# PERMANOVA analysis for Family
perman <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=199,
method = distance)
print(perman)
per.store <- Pr(>F)
per.store <- per$f.perms
per.store
per$aov.tab
per$coefficients
per$coef.sites
per$f.perms
per$model.matrix
per$call
per$terms
list(t(otu_table(phy)), Diet)
renper <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
renper <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
print(renper)
renper <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance, p_adj_method = "Bonferroni")
print(renper)
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
renper <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance, p_adj_method = "Bonferroni")
print(renper)
renper <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance) #p_adj_method = "Bonferroni")
print(renper)
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
results <- list()
for (i in renper) {
{
if (renper < 0.01){
renp <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
}}
}
# PERMANOVA analysis for Family
perman <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=199,
method = distance)
perman$model.matrix
perman$f.perms
results <- lapply(colnames(otu_table(phy)), function(x)
{
p <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(z$aov.tab))
}
)
results <- lapply(colnames(otu_table(phy)), function(x)
{
p <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
)
results[[1]]
names(results) <- colnames(otu_table(phy))
results <- do.call(rbind, results)
results
results[[1]]
results
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
results <- lapply(colnames(otu_table(phy)), function(x)
{
p <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
)
results
results
p
names(results) <- colnames(otu_table(phy))
results <- do.call(rbind, results)
re <- results %>% rename(p-value = "Pr(>F)")
results
re <- results %>% rename(p-value = "Pr(>F)")
pairwise_adonis(results, "results$Pr(>F)", sim_method = "bray",
p_adjust_m = "bonferroni", reduce = NULL)
library(vegan)
pairwise_adonis(results, "results$Pr(>F)", sim_method = "bray",
pairwise_adonis(results, "results$Pr(>F)", sim_method = "bray",
p_adjust_m = "bonferroni", reduce = NULL)
?vegan
pairwise_adonis(results, "results$Pr(>F)", sim_method = "bray", p_adjust_m = "bonferroni", reduce = NULL)
p.adjust(results, method = "bonferroni")
re <- results %>% rename(p-value = "Pr(>F)")
re <- results %>% rename(p-value = Pr(>F))
p.adjust(results, method = "bonferroni")
p.adjust(re, method = "bonferroni")
results
results$`Pr(>F)` <- p-value
results$`Pr(>F)` <- pval
pval <- results$`Pr(>F)`
results
results$pval<-results$`Pr(>F)`
results$pval
p.adjust(results$pval, method = "bonferroni")
results <- lapply(colnames(otu_table(phy)), function(x)
{
p <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
)
results[[1]]
names(results) <- colnames(otu_table(phy))
results <- do.call(rbind, results)
write.csv(results, "res.csv")
#names(results)[names(results) == 'Pr(>F)'] <- "p-value"
#re <- results %>% rename(p-value = Pr(>F))
results$pval<-results$`Pr(>F)`
p.adjust(results$pval, method = "bonferroni")
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
p_adj_method <- "BH"
alpha <- 0.05
results <- list()
for (i in renper) {
{
if (renper < 0.01){
renper <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
}}
}
results <- lapply(colnames(otu_table(phy)), function(x)
{
p <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
)
as.data.frame(p$aov.tab)
p$aov.tab
p
results
results <- lapply(colnames(otu_table(phy)), function(x)
{
form <- as.formula(paste("phy", x, sep="~"))
p <- adonis(t(otu_table(phy)) ~ Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
)
results[[1]]
results$
results
as.data.frame(p$aov.tab)
x
library(microbiome)
library(phyloseq)
library(vegan)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(reshape2)
#library(DESeq2)
library(Cairo)
library(gridExtra)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
p_adj_method <- "BH"
alpha <- 0.05
results <- lapply(colnames(otu_table(phy)), function(p)
{
form <- as.formula(paste("phy", x, sep="~"))
p <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
)
p
results
p$aov.tab
results <- lapply(colnames(otu_table(phy)), function(p)
{
form <- as.formula(paste("phy", x, sep="~"))
p <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
)
results
results[[1]]
names(results) <- colnames(otu_table(phy))
results <- do.call(rbind, results)
write.csv(results, "res.csv")
results$pval<-results$`Pr(>F)`
p.adjust(results$pval, method = "bonferroni")
results <- list()
#results <- lapply(colnames(otu_table(phy)), function(p)
{
#form <- as.formula(paste("phy", x, sep="~"))
p <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
results <- list()
#results <- lapply(colnames(otu_table(phy)), function(p)
{
#form <- as.formula(paste("phy", x, sep="~"))
p <- adonis2(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
results <- list()
#form <- as.formula(paste("phy", x, sep="~"))
{
p <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
results
##results <- list()
results <- lapply(colnames(otu_table(phy)), function(p)
#form <- as.formula(paste("phy", x, sep="~"))
p <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
##results <- list()
results <- lapply(colnames(otu_table(phy)), function(p)
{
#form <- as.formula(paste("phy", x, sep="~"))
p <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
}
)
results
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
p_adj_method <- "BH"
alpha <- 0.05
results <- list()
p <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
return(as.data.frame(p$aov.tab))
p
#return(as.data.frame(p$aov.tab))
p$aov.tab
tu <- as.data.frame(p)
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
p_adj_method <- "BH"
alpha <- 0.05
phy <- readRDS("inputdata/processed/phyloseq/physeq.RDS")
# PERMANOVA analysis for all co-factors
trans <- "compositional"
distance <- "bray"
p_adj_method <- "BH"
alpha <- 0.05
results <- list()
p <- adonis(t(otu_table(phy)) ~ Diet + Age + Gender + Location + Family,
data = meta(phy),
permutations=199,
method = distance)
p$aov.tab
rmarkdown::render("Betadiversity.Rmd", output_format = "md_file")
rmarkdown::render("Betadiversity.Rmd", output_format = "md_document")
